# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  push

permissions:
  contents: read

jobs:
  build_and_upload_package_macos:

    runs-on: macos-latest
    continue-on-error: true

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel twine
    - name: Build package
      run: ./build_package.sh
    - name: Publish package
      run: twine upload python_package/dist/*.whl
      env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
          TWINE_NON_INTERACTIVE: 1

  build_and_upload_package_linux:

    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel twine auditwheel
    - name: Build package
      run: ./build_package.sh
    - name: Publish package
      run: |
        auditwheel repair python_package/dist/*.whl
        twine upload wheelhouse/*manylinux1*.whl
      env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
          TWINE_NON_INTERACTIVE: 1

  build_and_upload_package_windows:

    runs-on: windows-latest
    continue-on-error: true

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel twine

    - name: Build package
      run: |
        python build.py prepare
        python configure.py --arch=x86_64 --sip-module PyQt5.sip --no-tools
        Set-Location "python_package"
        python setup.py bdist_wheel

    - name: Publish package
      working-directory: python_package
      run: |
        twine upload dist\*.whl
      env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
          TWINE_NON_INTERACTIVE: 1
